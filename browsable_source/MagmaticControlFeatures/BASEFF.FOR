      SUBROUTINE BASEFF
C
      IMPLICIT INTEGER(A-Z)
C
C
      INTEGER*2
     *ATOMT,NLAMBD,NAPPID,LISTT,INDMAX,NENTPO,AAK,IPUN,NNAMBD,
     * GENKEY,CXTX,RRADIX,ACXT,
     *CXTC,NREDMO,DUMMY,UNO,DUE,KRYFOU,CXTNEW,NEWKEY,CXTT
      DOUBLE PRECISION NPRINA,PRINO
C
      COMMON /LASTAP/LASTAP /CONTAP/CONTAP /LISTSC/LISTSC/SCTSON/SCTSON
      COMMON /NUMCXT/ NUMCXT
      COMMON /SCTHEA/ SCTHEA
      COMMON / UNIT / UNIT
C
      COMMON
     */ ABLOCK / V1(3),ABLOCK(1284)
     */ BBLOCK / V2(3),BBLOCK(3072)
     */ CBLOCK / V3(3),CBLOCK(4096)
     */ FLA / FLA
     */ FLB / FLB
     */ FLC / FLC
     */ NAPPOI / NAPPOI
     */ BPOINT / BPOINT
     */ CPOINT / CPOINT
C
      COMMON / SWIRET / SWIRET
C
      COMMON
     */ VALUE / A1(4),VALUE(1023)
     */ FDEF / A2(4),FDEF(1023)
     */ PLIST / A3(4),PLIST(1023)
     */ NPRINA / A4(4),PRINO,NPRINA(1023)
C
      COMMON
     */ CAR / B1(4),CAR(15767)
     */ CDR / B2(4),CDR(15767)
     */ FLFS / FLFS
     */ FSSIZE / FSSIZE
C
      COMMON
     */ ALMODE / ALMODE
     */ ARG1 / ARG1 
     */ NOBIND / NOBIND
     */ NEVALV / NEVALV
     */ NIL / NIL NTYPEE / NTYPEE
     */ UNNO / UNNO
     */ T / T
C
      COMMON
     */ ATONT / ATOMT
     */ NLAMBD / NLAMBD
     */ NNAMBD/NNAMBD
     */ NAPPID / NAPPID
     */EXES/EXES
     */ LISTT / LISTE
     */ INDMAX / INDMAX
     */ NENTPO / NENTPO
     */ AAK / AAK
     */ CXTX / BB1(3),CXTX(128)
     */ CPLIST / BAB(3),CPLIST( 128)
     */ CXTC / CXTC
     */ ACXT/ ACXT
     */ CXTT / CXTT
     */ NREDMO / NREDMO
     */ RRADIX / RRADIX
CSTAT
CSTAT
      COMMON /CONCON/ CONCON
C
C
      DIMENSION
     *FUN(1284),RETP(1284),CP(1284),BLP(1284),SEGNO(1284),ABP(1284),
     *BIND(3072),VAR(3072),BBP(3072),SONBRO(4096),NREENT(4096),
     *VALORE(4096),INF(4096),LISTAR(4096),BLINK(4096)
C
      EQUIVALENCE
     *(ABLOCK(1),FUN(1)),
     *(ABLOCK(2),RETP(1)),
     *(ABLOCK(3),CP(1)),
     *(ABLOCK(4),BLP(1)),
     *(ABLOCK(5),SEGNO(1)),
     *(ABLOCK(6),ABP(1)),
     *(BBLOCK(1),BIND(1)),
     *(BBLOCK(2),VAR(1)),
     *(BBLOCK(3),BBP(1)),
     *(CBLOCK(1),SONBRO(1)),
     *(CBLOCK(2),NREENT(1)),
     *(CBLOCK(3),VALORE(1)),
     *(CBLOCK(3),INF(1)),
     *(CBLOCK(4),LISTAR(1)),
     *(CBLOCK(4),BLINK(1))
C
      DATA UNO/1/,DUE/2/
C     *********  COMMENTO  ***********
C    SI SUPPONE CHE LE FUNZIONI DI BASE NON ALTERINO "ALMODE"
C  ***********************************************************
      CALL GETARG
999  INDIC = NENTPO-19
      GO TO
     *(20,21,22,23,23,23,26,27,28,23,30,
     *23,23,23,34,35,36,37,38,23),INDIC
23    WRITE(6,1100) NENTPO
1100  FORMAT(' BASEFF,NENTPO ERRATO',I10)
      CALL HLT
C DELOCAZIONE E RITORNO
C
76801 CONTINUE
998    IF(ALMODE.NE.0) GO TO 1
      CALL CPOP
      SONBRO(CPOINT) = MOD(SONBRO(CPOINT) .UNNO)
      GO TO 2
      CPOINT = BLINK(CPOINT)
2     SWIRET=2
997   RETURN
C
C     ENTLAB(20) INDIC= 1  * CAR *
C
20    ARG1 = ARGF(1)
      TEMP = FTYPE(ARG1)
      IF(TEMP.NE.LISTT) CALL ERROF(41)
      NEVALV = CAR(ARG1)
      GOTO 76801
C3     IF(TEMP.NE.ATOMT) CALL ERROF(19)
C      NEVALV = ALRVLR(VALUE(ARG1) )
C      IF(NEVALV.NE.NOBIND) GO TO 76801
C      CALL ERROF(19)
C      GOTO 76801
C
C     ENTLAB(21) INDIC = 2    *CDR*
C
21    ARG1 = ARGF(1)
      TEMP = FTYPE(ARG1)
      IF(TEMP.NE.LISTT) CALL ERROF(41)
      NEVALV = CDR(ARG1)
      GOTO 76801
C5     IF(TEMP.NE.ATOMT) CALL ERROF(19)
C      NEVALV = PLIST(ARG1)
C       WRITE(6,4432)
C4432    FORMAT(' CDR OF ATOM')
C      GOTO 76801
C     PRODUCE UNA LISTA CHE PUO CONTENERE I RIDEFINEIT
C    
C     ENTLAB(22) INDIC = 3  * CONS *
C
22    NEVALV = CONSF(ARGF(1),ARGF(2))
      GOTO 76801
C
C     ENTLAB(26) INDIC = 7 * ATOMP *
C
26    NEVALV = T
      IF(ARGF(1)/NTYPEE.EQ.LISTT) NEVALV=NIL
      GOTO 76801
C
C     ENTLAB(27) INDIC = 8  * EO *
C
27    NEVALV = NIL
      IF(ARGF(1).EQ.ARGF(2) ) NEVALV = T
      GOTO 76801
C
C     ENTLAB(30) INDIC = 11  * SET *
C
30    ARG1 = ARGF(1)
      NEVALV = ARGF(2)
C
C     ENTRY SETQQQ:       (PUNTO INGRESSO 29)
C
      ENTRY SETQQQ
C
      IF(ARG1/NTYPEE.NE.ATOMT) CALL ERROF(18)
      TEMP = BPOINT
      IF(LASTAP.NE.O) GOTO 7
      SCTT=BLP(NAPPOI) /UNNO
51    IF(TEMP.EQ.SCTT) GOTO 7
      IF(VAR(TEMP).NE.ARG1) GOTO 53
      BIND(TEMP) =NEVALV
      GOTO 76801
53    TEMP=BBP(TEMP)
      GOTO 51
C     LOOPSET
7     IF(TEMP.NE.O) GO TO 8
      CALL ALRVLW(NEVALV,VALUE(MOD(ARG1, NTYPEE)))
      GOTO 76801
8     IF(VAR(TEMP).NE.AUG 1) GO TO 9
      CALL ALRVLW(NEVALV, BIND(TEMP))
      GOTO 76801
9     TEMP = BBP(TEMP)
      GO TO 7
C
C     ENTLAB(34) INDIC = 15     * PUTD *
34    CALL PUTDF(ARGF(1), ARGF(2), ARGF(3))
      GOTO 76801
C
C
C     ENTLAB(35) INDIC = 16     * GETD *
C
35    ARG1 = ARGF(1)
      IF(FTYPE(ARG1).NE.ATOMT) CALL ERROR(18)
      ARG 2 = ARGF(2)
      IF(ARG2.EQ.NIL) GO TO 891
      IF(FTYPE(ARG2).NE.CXTT) CALL ERROF(21)
      DUMMY = ARG2
      CALL RINCA(DUMMY, UNO, KEYFOU)
      IF(KEYFOU.LE.0) CALL ERROF(22)
      AAKL = AAK
      AAK = KEYFOU
      NEVALV = ALRVLR(PDEF(ARG1))
      AAK = AAKL
      GO TO 892
891   NEVALV = ALRVLR(FDEF(ARG1))
892   DUMMY = NEVALV/NTYPEE
      IF(DUMMY.EQ.NNAMBD) GOTO 10
      IF(DUMMY.EQ.NLAMBD) GOTO 10
      GOTO 76801
10    NEVALV = MOD(NEVALV, NTYPEE)
      GOTO 76801
C ******    ENTRY GETPF  ****
      ENTRY GETPF
      FLAGIN=1
      GOTO 371
C
C     ENTLAB(37)INDIC = 18   * GETP *
C
37    FLAGIN=O
371   TEMP1 = ARGF(1)
      TEMP = FTYPE(TEMP1)
      IF(TEMP.EQ.ATOMT) GO TO 5672
      IF(TEMP.NE.CXTT) CALL ERROF(45)
      DUMMY = TEMP1
      CALL RINCA(DUMMY, UNO, KEYPOU)
      IF(KEYFOU.LE.0) CALL ERROF(22)
      PROP = CPLIST(KEYFOU)
      GO TO 5673
5672  PROP = PLIST(TEMP 1)
      ARG3 = ARGF(3)
C     CM00002:
5673  KARG2 = ARGF(2)
      IF(PROP.NE.NIL) GO TO 11
      NEVALV = NIL
      GOTO 76802
C     LOOP
11    IF(CAR(PROP).NE.KARG2) GO TO 118
      IF(TEMP.EQ.ATOMT) GO TO 5674
      NEVALV = ALRVLR(CAR(CDR(PROP)))
      GO TO 76802
5674  IF(ARG3.NE.NIL) GO TO 12
      NEVALV = ALRVLR(CAR(CDR(PROP)))
      GOTO 76802
12    IF(FTYPE(ARG3).NE.CXTT) cALL ERROF(21)
      DUMMY = ARG3
      CALL RINCA(DUMMY, UNO, KEYFOU)
      IF(KEYFOU.GT.0) GO TO 1276
      WRITE(6,1277)
      CALL ERROF(22)
1277  FORMAT(' BASEFF')
1276  AAKL = AAK
      AAK = KEYFOU
      NEVALV = ALRVLR(CAR(CDR(PROP)))
      AAK = AAKL
      GOTO 76802
118   PROP = CDR(CDR(PROP))
      IF(PROP.NE.NIL) GO TO 11
      NEVALV = NIL
      OTO 76802
76802 IF(FLAGIN.EQ.0) GOTO 76801
      RETURN
C
C     ENTLAB(36)INDIC = 17 
C     * PUT *
C
36    TEMP1 = ARGF(1)
      TEMP = FTYPE(TEMP1)
      IF(TEMP.EQ.ATOMT) GO TO 5670
      IF(TEMP.NE.CXTT) CALL ERROF(45)
      DUMMY = TEMP1
      CALL RINCA(DUMMY, UNO, KEYFOU)
      IF(KEYFOU.LE.0) CALL ERROF(22)
      PROP = CPLIST(KEYFOU)
      GO TO 5671
5670  PROP = PLIST(TEMP1)
C     CM001:
5671  KARG2 = ARGF(2)
      IF(PROP.NE.NIL) GO TO 19
      FREE = CONSF(NIL, NIL)
      IF(TEMP.EO.ATOMT) PLIST(TEMP1) = FREE
      IF(TEMP.EQ.CXTT) CPLIST(KEYFOU) = FREE
      CAR(FREE) = KARG2
      CDR(FREE) = CONSF(NIL, NIL)
      PROP = FREE
      GO TO 17
C     GO TO BPART
C     A PART
19    KSCRA=O
      KPREC=O
      ARG5=ARGF(5)
      IF(ARG5.EQ.NIL) GOTO 1919
      ARG5=ARG5-EXES
1919  KARG5=1
1904  IF(CAR(PROP).EQ.KARG2) GOTO 1901
      IF(ARG5.EQ.NIL) GOTO 1918
      IF(KARG5.EQ.ARG5) KSCRA=KPREC
      KPREC=PROP
      KARG5=KARG5+1
1918  IF(CDR(CDR(PROP)).EQ.NIL) GOTO 14
      PROP=CDR(CDR(PROP))
      GOTO 1904
14    IF(ARG5.EQ.NIL) GOTO 1905
I     iF(KARG5-ARG5) 1905, 1905, 1908
1905  CDR(CDR(PROP))=CONSF(KARG2, CONSP(NIL,NIL))
      PROP=CDR(CDR(PROP))
      GOTO 17
1908  IF(KSCRA.NE.O) GOTO 1902
      IF(TEMP.EQ.ATOMT) GOTO 1903
      CPLIST(KEYFOU)=CONSF(KARG2, CONSF(NIL,CPLIST(KEYFOU)))
      PROP=CPLIST(KEYFOU)
      GOTO 17
1903  PLIST(TEMP1)=CONSF(KARG2,CONSF(NIL, PLIST(TEMP1)))
      ROP=PLIST(TEMP 1)
      GOTO 17
1902  CDR(CDR(KSCRA))=CONSF(KARG2,CONSF(NIL,CDR(CDR(KSCRA))))
      PROP=CDR(CDR(KSCRA))
      GOTO 17
1901  IF(ARG5.EQ.NIL) GOTO 17
      IF(KARG5-ARG5) 1910,17,1906
C
C       ARG5 > KARG5  DEVO ANCORA TROVARE IL POSTO GIUSTO
C
1910  IF(CDR(CDR(PROP)).EQ.NIL) GOTO 17
      IF(KPREC.EQ.0) GOTO 1912
      CDR(CDR(KPREC))=CDR(CDR(PROP))
      KSER= PROP
      PROP=CDR(CDR(KPREC))
1911  KARG5=KARG5+1
      IF(KARG5.EQ.ARG5) GOTO 1909
      IF(CDR(CDR(PROP)).EQ.NIL) GOTO 1909
      PROP=CDR(CDR(PROP))
      GOTO 1911
1909  CDR(CDR(KSER))=CDR(CDR(PROP))
      CDR(CDR(PROP))=KSER
      PROP=KSER
      GOTO 17
1912  IF(TEMP.EQ.ATOMT) GOTO 1913
      CPLIST(KEYFOU)=CDR(CDR(PROP))
      GOTO 115
1913  PLIST(TEMP1)=CDR(CDR(PROP))
1915  KSER=PROP
      PROP=CDR(CDR(PROP))
      GOTO 1911
1906  IF(KSCRA.NE.0) GOTO 1914
      IF(TEMP.EQ.ATOMT) GOTO 1917
      KKSCRA=CPLIST(KEY FOU)
      CPLIST(KEYFOU)=PROP
      GOTO 116
1917  KKSCRA=PLIST(TEMP 1)
      PLIST(TEMP1)=PR OP
1916  CDR(CDR(KPREC))=CDR(CDR(PROP))
      CDR(CDR(PROP))=KKSCRA
      GOTO 17
1914  KKSCRA=CDR(CDR(KSCRA))
      CDR(CDR(KSCRA))=PROP
      CDR(CDR(KPREC))=CDR(CDR(PROP))
      CDR(CDR(PROP))=KKSCRA
C     BPART
17    ARG 3= ARGF(3)
      IF(TEMP.NE.ATOMT) GO TO 3457
      CALL GLACLO(ARGF(4), ARG3, CAR(CDR(PROP)))
      GO TO 3458
3457  CAR(CDR(PROP))=ARG3
3458  NEVALV= ARG3
      GOTO 76801
C
C     ENTLAB(38) INDIC= 19  * NEWCXT *
C
38    CONTINUE
      CXTC= CXTC+1
CSTAT
CSTAT CONCON=CONCON+1
C     WRITE(6,9000) CONCON
C9000 FORMAT(' CONCON IN BASEF ', I10)
      IF(CXTC.LE.32767) GOTO 471
      WRITE(6,472)
472   FORMAT(' CONTEXT NAME OVERFLOW - STOP BY SYSTEM ')
      CALL HLT
471   CXTNEW = CXTC
      IF(ARGF(1).NE.NIL) GO TO 99
      IF(CXTX(AAK).GT.0) GO TO 1280
      CXTC = CXTC-1
      CALL ERROF(22)
1280  NEWKEY = GENKEY(AAK,CXTNEW)
      GOTO 3004
99    ARG1 = ARGF(1)
      IF(PTYPE(ARG1).EQ.CXTT) GOTO 83
      CXTC=CXTC-1
      CALL ERROF(21)
83    DUMMY = MOD(ARG1,NTYPEE)
      CALL RINCA(DUMMY,UNO,KEYPOU)
      IF(KEYFOU.GT.O) GO TO 1282
      CXTC = CXTC-1
      CALL ERROF(22)
1282  NEWKEY = GENKEY(KEY FOU, CXTNEW)
3004  CALL RINCA(CXTNEW, DUE, NEWKEY)
300   NREDMO=1
      NUMCKT = NUMCXT + 1
C      TEMP=SEGNO(NAPPOI)
      IF(ARGF(1).EQ.NIL) GO TO 308
      IF(ARGF(1).NE.ACXT+CXTT*NTYPEE) GO TO 303
308   IF (LASTAP.EQ.0) GOTO 305
      SCTSON=SEGNO(LASTAP)
      GOTO 306
305   SCTSON=0
306   IF(SEGNO(NAPPOI).EQ.0) GOTO 301
303   NEVALV=CXTT*NTYPEE+CXTNEW
      GOTO 76801
301   TEMP=CONS F(NAPPOI, CONTAP)
      CONTAP=CONTAP+1
      CALL CINSCT(TEMP, CXTNEW)
      SEGNO(NAPPOI)=LISTSC
      LASTAP=NAPPOI
      GOTO 303
C
C     ENTLAB(28)  INDIC=9
C     *  NULL  *
28    NEVALV=T
      IF(ARGF(1).NE.NIL) NEVALV=NIL
      GOTO 76801
      END
